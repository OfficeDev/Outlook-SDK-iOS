/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/



#import "MSOutlookModels.h"
#import "core/MSOrcObjectizer.h"


/** Implementation for MSOutlookNotification
 *
 */
@implementation MSOutlookNotification


@synthesize odataType = _odataType;


+ (NSDictionary *) $$$_$$$propertiesNamesMappings
{
    static NSDictionary *_$$$_$$$propertiesNamesMappings=nil; 
    
        if(_$$$_$$$propertiesNamesMappings==nil) {
    
        _$$$_$$$propertiesNamesMappings=[[NSDictionary alloc] initWithObjectsAndKeys:  @"SubscriptionId", @"subscriptionId", @"SubscriptionExpirationDateTime", @"subscriptionExpirationDateTime", @"SequenceNumber", @"sequenceNumber", @"ChangeType", @"changeType", @"Resource", @"resource", @"ResourceData", @"resourceData", @"Id", @"_id", nil];
        
    }
    
    return _$$$_$$$propertiesNamesMappings;
}

- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#Microsoft.OutlookServices.Notification";
        
    }

	return self;
}



- (instancetype) initWithDictionary: (NSDictionary *) dic {
    if((self = [self init])) {
        if(dic!=nil) {
		_subscriptionId = (![dic objectForKey: @"SubscriptionId"] || [ [dic objectForKey: @"SubscriptionId"] isKindOfClass:[NSNull class]] )?_subscriptionId:[[dic objectForKey: @"SubscriptionId"] copy];
		_subscriptionExpirationDateTime = (![dic objectForKey: @"SubscriptionExpirationDateTime"] || [ [dic objectForKey: @"SubscriptionExpirationDateTime"] isKindOfClass:[NSNull class]] )?_subscriptionExpirationDateTime:[MSOrcObjectizer dateFromString:[dic objectForKey: @"SubscriptionExpirationDateTime"]];
		_sequenceNumber = (![dic objectForKey: @"SequenceNumber"] || [ [dic objectForKey: @"SequenceNumber"] isKindOfClass:[NSNull class]] )?_sequenceNumber:[[dic objectForKey: @"SequenceNumber"] intValue];
		_changeType = (![dic objectForKey: @"ChangeType"] || [ [dic objectForKey: @"ChangeType"] isKindOfClass:[NSNull class]] )?_changeType:[MSOutlookChangeTypeSerializer fromString:[dic objectForKey: @"ChangeType"]];
		_resource = (![dic objectForKey: @"Resource"] || [ [dic objectForKey: @"Resource"] isKindOfClass:[NSNull class]] )?_resource:[[dic objectForKey: @"Resource"] copy];
		_resourceData = (![dic objectForKey: @"ResourceData"] || [ [dic objectForKey: @"ResourceData"] isKindOfClass:[NSNull class]] )?_resourceData:[[MSOutlookEntity alloc] initWithDictionary: [dic objectForKey: @"ResourceData"]];
		self._id = (![dic objectForKey: @"Id"] || [ [dic objectForKey: @"Id"] isKindOfClass:[NSNull class]] )?self._id:[[dic objectForKey: @"Id"] copy];
    }
    [self.updatedValues removeAllObjects];
    }
    
    return self;
}

- (NSDictionary *) toDictionary {
    
    NSMutableDictionary *dic=[[NSMutableDictionary alloc] init];

	{id curVal = [self.subscriptionId copy];if (curVal!=nil) [dic setValue: curVal forKey: @"SubscriptionId"];}
	{id curVal = [MSOrcObjectizer stringFromDate:self.subscriptionExpirationDateTime];if (curVal!=nil) [dic setValue: curVal forKey: @"SubscriptionExpirationDateTime"];}
	{[dic setValue: [NSNumber numberWithInt: self.sequenceNumber] forKey: @"SequenceNumber"];}
	{[dic setValue: [MSOutlookChangeTypeSerializer toString:self.changeType] forKey: @"ChangeType"];}
	{id curVal = [self.resource copy];if (curVal!=nil) [dic setValue: curVal forKey: @"Resource"];}
	{id curVal = [self.resourceData toDictionary];if (curVal!=nil) [dic setValue: curVal forKey: @"ResourceData"];}
	{id curVal = [self._id copy];if (curVal!=nil) [dic setValue: curVal forKey: @"Id"];}
    [dic setValue: @"#Microsoft.OutlookServices.Notification" forKey: @"@odata.type"];

    return dic;
}

- (NSDictionary *) toUpdatedValuesDictionary {
    
    NSMutableDictionary *dic=[[NSMutableDictionary alloc] init];

	{id curVal = self.subscriptionId;
    if([self.updatedValues containsObject:@"SubscriptionId"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"SubscriptionId"];
            }
    }
	{id curVal = self.subscriptionExpirationDateTime;
    if([self.updatedValues containsObject:@"SubscriptionExpirationDateTime"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[MSOrcObjectizer stringFromDate:curVal] forKey: @"SubscriptionExpirationDateTime"];
            }
    }
 if([self.updatedValues containsObject:@"SequenceNumber"])
            { [dic setValue: [NSNumber numberWithInt: self.sequenceNumber] forKey: @"SequenceNumber"];
} if([self.updatedValues containsObject:@"ChangeType"])
            { [dic setValue: [MSOutlookChangeTypeSerializer toString:self.changeType] forKey: @"ChangeType"];
}	{id curVal = self.resource;
    if([self.updatedValues containsObject:@"Resource"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"Resource"];
            }
    }
	{id curVal = self.resourceData;
    if([self.updatedValues containsObject:@"ResourceData"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal toDictionary] forKey: @"ResourceData"];
            }
        else
    {
                
        NSDictionary *updatedDic=[curVal toUpdatedValuesDictionary];
        
            if(updatedDic!=nil && [updatedDic count]>0)
            {
                [dic setValue: [curVal toDictionary] forKey: @"ResourceData"];
            }
        
            }}
	{id curVal = self._id;
    if([self.updatedValues containsObject:@"Id"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"Id"];
            }
    }
    return dic;
}


/** Setter implementation for property subscriptionId
 *
 */
- (void) setSubscriptionId: (NSString *) value {
    _subscriptionId = value;
    [self valueChangedFor:@"SubscriptionId"];
}
       
/** Setter implementation for property subscriptionExpirationDateTime
 *
 */
- (void) setSubscriptionExpirationDateTime: (NSDate *) value {
    _subscriptionExpirationDateTime = value;
    [self valueChangedFor:@"SubscriptionExpirationDateTime"];
}
       
/** Setter implementation for property sequenceNumber
 *
 */
- (void) setSequenceNumber: (int) value {
    _sequenceNumber = value;
    [self valueChangedFor:@"SequenceNumber"];
}
       
/** Setter implementation for property changeType
 *
 */
- (void) setChangeType: (MSOutlookChangeType) value {
    _changeType = value;
    [self valueChangedFor:@"ChangeType"];
}
       

- (void)setChangeTypeString:(NSString *)string {
        
    _changeType = [MSOutlookChangeTypeSerializer fromString:string];
    [self valueChangedFor:@"ChangeType"]; 
}

/** Setter implementation for property resource
 *
 */
- (void) setResource: (NSString *) value {
    _resource = value;
    [self valueChangedFor:@"Resource"];
}
       
/** Setter implementation for property resourceData
 *
 */
- (void) setResourceData: (MSOutlookEntity *) value {
    _resourceData = value;
    [self valueChangedFor:@"ResourceData"];
}
       

@end
